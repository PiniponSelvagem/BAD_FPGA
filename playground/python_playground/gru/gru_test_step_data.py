import os
import time

import tensorflow as tf

gpus = tf.config.experimental.list_physical_devices('GPU')
for gpu in gpus:
    tf.config.experimental.set_memory_growth(gpu, True)

#########################################################

CUDA_VISIBLE_DEVICES=""     # force use CPU

import numpy as np
from tensorflow import keras
from tensorflow.keras import layers

GRU_UNITS = 4
INPUT_LAYER_SHAPE = [None, GRU_UNITS]   # maybe ????
KERNEL = [
    [ 0.09328797459602356, -0.14423318207263947, 0.05723040923476219, -0.11457829177379608, -0.1551823765039444, 0.06890249997377396, 0.14696961641311646, 0.15685993432998657, 0.08041565865278244, -0.011380927637219429, 0.11137595772743225, 0.039657384157180786 ], 
    [ -0.06359504163265228, 0.010740764439105988, -0.06599920243024826, 0.0035890135914087296, -0.06796855479478836, -0.014085154980421066, 0.0003849963250104338, 0.2191721647977829, -0.14060650765895844, 0.13892300426959991, -0.07230409979820251, -0.05099346861243248 ],
    [ 0.054023921489715576, 0.029494358226656914, -0.13789314031600952, -0.0066886041313409805, -0.10313959419727325, -0.06582074612379074, 0.09140714257955551, -0.10954931378364563, -0.01481624785810709, 0.07574597001075745, 0.0783919021487236, 0.0569973848760128 ],
    [ 0.10220101475715637, -0.0894460529088974, -0.192433699965477, 0.15619510412216187, -0.13574598729610443, -0.015100651420652866, -0.04062913358211517, -0.05308453366160393, -0.03741860389709473, 0.1041494831442833, -0.10299824178218842, 0.10386911779642105 ],
]
REC_KERNEL = [
    [ 0.02673882246017456, 0.057039160281419754, 0.014511843211948872, -0.09925466030836105, -0.046919357031583786, -0.005756886675953865, -0.08231764286756516, 0.04614228755235672, 0.04263906925916672, 0.028190460056066513, 0.04845970869064331, -0.0447242446243763 ], 
    [ -0.048061519861221313, -0.13918046653270721, 0.0632314532995224, 0.008528322912752628, 0.15494024753570557, 0.06547942012548447, 0.08842337131500244, 0.0030862062703818083, -0.027148408815264702,-0.12858068943023682, 0.02790527418255806, -0.14804261922836304 ],
    [ 0.0975215807557106, 0.05268855392932892, 0.11988946050405502, 0.03758050501346588, 0.12552648782730103, 0.05336257070302963, 0.047844476997852325, 0.040932852774858475, -0.0773303359746933, 0.054036278277635574, 0.17089463770389557, 0.037518974393606186 ],
    [ -0.03923599049448967, 0.09807618707418442, -0.1178690567612648, 0.1491660326719284, 0.003437004517763853, -0.028483103960752487, 0.11781293898820877, 0.06325460225343704, 0.0322096012532711, 0.1948537677526474, 0.10816236585378647, -0.029297366738319397 ],
]
BIAS = [
    [ -0.0007574477349407971, -0.013307561166584492, 0.013961559161543846, 0.026683257892727852, -0.017528248950839043, -0.027874281629920006, 0.005773439072072506, 0.024008657783269882, -0.05437887832522392, 0.05094195529818535, 0.007748863659799099, -0.02839399129152298 ], 
    [ -0.0007574477349407971, -0.013307561166584492, 0.013961559161543846, 0.026683257892727852, -0.017528248950839043, -0.027874281629920006, 0.005773439072072506, 0.024008657783269882, -0.05437887832522392, 0.05094195529818535, 0.007748863659799099, -0.02839399129152298 ],
]

INPUT = [[[
            2.9400522708892822,
            1.5934033393859863,
            0.6511431932449341,
            0.0
        ]]]


#initializer = tf.keras.initializers.Orthogonal(gain=1.0, seed=123)
initializer = tf.keras.initializers.Zeros()

spec = layers.Input(shape=INPUT_LAYER_SHAPE, dtype=np.float32)
x = layers.GRU(GRU_UNITS, recurrent_initializer=initializer, return_sequences=True)(spec)
model = keras.Model(inputs=spec, outputs=[x])


kernel = np.array(KERNEL)
recurrent_kernel = np.array(REC_KERNEL)
bias = np.array(BIAS)

model.set_weights([kernel, recurrent_kernel, bias])
model.save("model_simple_gru.h5", save_format="h5")


input = np.array(INPUT)

predict = model.predict(input)
print(predict)


with open('output_expected.txt', 'w') as f:
    for i, x in enumerate(predict.flatten()):
        f.write('%.18f, ' % x)
